{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","error","setError","txn","setTxn","text","setText","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","Link","href","target","rel","IconButton","color","aria-label","fontSize","style","Container","marginTop","TextField","label","multiline","rows","value","onChange","event","fullWidth","paddingBottom","Button","onClick","txData","toBuffer","f","TransactionFactory","fromSerializedData","JSON","stringify","toJSON","err","message","disabled","overflowY","border","padding","Alert","severity","Box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactGA","initialize","pageview","window","location","pathname","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6hBAuGeA,MAxFf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,OAESF,qBAFT,mBAENG,EAFM,KAEDC,EAFC,OAGWJ,qBAHX,mBAGNK,EAHM,KAGAC,EAHA,KAsBb,OACE,gCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMC,GAAI,CAAEC,SAAU,GAAzD,oDAGA,cAACC,EAAA,EAAD,CACEC,KAAK,uCACLC,OAAO,SACPC,IAAI,WAHN,SAKE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXT,UAAU,OAHZ,SAKE,cAAC,IAAD,CAAYU,SAAS,UAAUC,MAAO,CAAEH,MAAO,oBAKvD,eAACI,EAAA,EAAD,CAAWD,MAAO,CAAEE,UAAW,IAA/B,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,WAAS,EACTC,KAAM,EACNC,MAAOzB,EACP0B,SA7Ca,SAACC,GACpB9B,IACAE,IACAE,EAAQ0B,EAAMf,OAAOa,QA2CfG,WAAS,EACTV,MAAO,CAAEW,cAAe,MAE1B,cAACC,EAAA,EAAD,CAAQxB,QAAQ,YAAYyB,QA3Cb,WACnB,IACE,IAAK/B,EAAM,OACX,IAAMgC,EAASC,mBAASjC,GAClBkC,EAAIC,qBAAmBC,mBAAmBJ,GAChDjC,EAAOsC,KAAKC,UAAUJ,EAAEK,SAAU,KAAM,IACxC,MAAOC,GACP3C,EAAQ,OAAC2C,QAAD,IAACA,OAAD,EAACA,EAAKC,WAoCuCC,UAAW1C,EAA9D,oBAGCF,GACC,qBACEoB,MAAO,CACLyB,UAAW,SACXC,OAAQ,kBACRC,QAAS,SACTzB,UAAW,IALf,SAQE,8BAAMtB,MAGTF,GACC,cAACkD,EAAA,EAAD,CAAOC,SAAS,QAAQ7B,MAAO,CAAEE,UAAW,IAA5C,SACGxB,IAGL,eAACoD,EAAA,EAAD,CAAK9B,MAAO,CAAEE,UAAW,IAAzB,UACE,cAACf,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,oDACsB,IACpB,mBAAGK,KAAK,0CAAR,sBAFF,OAEqE,IACnE,mBAAGA,KAAK,0CAAR,sBAA+D,IAHjE,4BC/EKsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAAQC,WAAW,kBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.1c88acde.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@mui/material/Alert\";\nimport Link from \"@mui/material/Link\";\nimport IconButton from \"@mui/material/IconButton\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport Box from \"@mui/material/Box\";\nimport { TransactionFactory } from \"@ethereumjs/tx\";\nimport { toBuffer } from \"ethereumjs-util\";\n\nfunction App() {\n  const [error, setError] = useState();\n  const [txn, setTxn] = useState();\n  const [text, setText] = useState();\n\n  const handleChange = (event) => {\n    setError();\n    setTxn();\n    setText(event.target.value);\n  };\n\n  const handleDecode = () => {\n    try {\n      if (!text) return;\n      const txData = toBuffer(text);\n      const f = TransactionFactory.fromSerializedData(txData);\n      setTxn(JSON.stringify(f.toJSON(), null, 2));\n    } catch (err) {\n      setError(err?.message);\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Decode Ethereum serialized transaction\n          </Typography>\n          <Link\n            href=\"//github.com/aquiladev/decode-eth-tx\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <IconButton\n              color=\"default\"\n              aria-label=\"GitHub repo\"\n              component=\"span\"\n            >\n              <GitHubIcon fontSize=\"default\" style={{ color: \"white\" }} />\n            </IconButton>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: 20 }}>\n        <TextField\n          label=\"Raw Txn\"\n          multiline\n          rows={4}\n          value={text}\n          onChange={handleChange}\n          fullWidth\n          style={{ paddingBottom: 20 }}\n        />\n        <Button variant=\"contained\" onClick={handleDecode} disabled={!text}>\n          Decode\n        </Button>\n        {txn && (\n          <div\n            style={{\n              overflowY: \"scroll\",\n              border: \"1px dashed grey\",\n              padding: \"0 13px\",\n              marginTop: 20,\n            }}\n          >\n            <pre>{txn}</pre>\n          </div>\n        )}\n        {error && (\n          <Alert severity=\"error\" style={{ marginTop: 20 }}>\n            {error}\n          </Alert>\n        )}\n        <Box style={{ marginTop: 20 }}>\n          <Typography variant=\"h6\">Features:</Typography>\n          <p>\n            # The dApp supports{\" \"}\n            <a href=\"https://eips.ethereum.org/EIPS/eip-1559\">EIP-1559</a> and{\" \"}\n            <a href=\"https://eips.ethereum.org/EIPS/eip-2930\">EIP-2930</a>{\" \"}\n            transactions\n          </p>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactGA.initialize('UA-215305995-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}